parsers: # array
  # - reg: ^.*$ 匹配所有订阅 或  - url: https://example.com/profile.yaml 指定订阅
  - reg: ^.*$
  # 格式化配置文件
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw);
        delete rawObj['port']
        delete rawObj['socks-port']
        delete rawObj['allow-lan']
        delete rawObj['mode']
        delete rawObj['log-level']
        delete rawObj['external-controller']
        const updatedObj = { ...rawObj, 'proxy-groups': [], rules: [] };
        return yaml.stringify(updatedObj);
      }
  # 建立自己的配置
    yaml:
      prepend-proxies:
        - name: mDavid_CN
          type: vmess
          server: your_ip
          port: 10086
          uuid: abc
          alterId: 0
          cipher: none
          udp: true

      prepend-proxy-groups: # 策略组
        - name: PROXY
          type: select
          url: http://www.gstatic.com/generate_204
          interval: 300
          proxies:
            - GOOD
            - SUB

        - name: MEDIA
          type: select
          url: http://www.gstatic.com/generate_204
          interval: 300
          proxies:
            - GOOD
            - SUB

        - name: GOOD # 自建的
          type: select
          url: http://www.gstatic.com/generate_204
          interval: 300
          proxies:
            - mDavid_CN

        - name: SUB # 订阅的
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300
          tolerance: 50

        - name: FINAL
          type: select
          proxies:
            - GOOD
            - SUB
            - DIRECT
          ssid-policy:
            default: GOOD

  # 策略组示例
       # - name: 默认拦截
       #   type: select
       #   proxies:
       #     - REJECT
       # - name: 分组名
         # type: select       # 手动选点
               # url-test     # 自动选择延迟最低的节点
               # fallback     # 节点故障时自动切换下一个
               # load-balance # 均衡使用分组内的节点
         # url: http://www.gstatic.com/generate_204 # 测试地址 非select类型分组必要
         # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
         # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
         # proxies:
           # - 节点名称或其他分组套娃

      commands:
        - proxy-groups.SUB.proxies=[]proxyNames|^(?!.*mDavid_CN).*$  # 向指定策略组(SUB)添加订阅中的节点名，可使用正则过滤
        # - proxy-groups.PROXY.proxies.0+DIRECT # 向指定分组(PROXY)第一个位置添加一个 DIRECT 节点名

        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c

  # 添加规则
      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
        - RULE-SET,mdavid_direct,DIRECT
        - RULE-SET,douyin,DIRECT
        - RULE-SET,applications,DIRECT
        - RULE-SET,private,DIRECT
        - RULE-SET,lancidr,DIRECT
        - RULE-SET,cncidr,DIRECT
        - RULE-SET,mdavid_proxy,PROXY
        - RULE-SET,globalmedia,MEDIA
        - RULE-SET,icloud,PROXY
        - RULE-SET,apple,PROXY
        - RULE-SET,google,PROXY
        - RULE-SET,telegramcidr,PROXY
        - RULE-SET,tld-not-cn,PROXY
        - RULE-SET,gfw,PROXY
        - RULE-SET,proxy,PROXY
        - GEOIP,LAN,DIRECT
        - GEOIP,CN,DIRECT
        - MATCH,FINAL

  # 添加规则集
      mix-rule-providers:
        globalmedia:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml"
          path: ./ruleset/globalmedia.yaml
          interval: 86400

        douyin:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/DouYin/DouYin.yaml"
          path: ./ruleset/douyin.yaml
          interval: 86400

        icloud: # iCloud 域名列表
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt"
          path: ./ruleset/icloud.yaml
          interval: 86400

        apple: # Apple 在中国大陆可直连的域名列表
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt"
          path: ./ruleset/apple.yaml
          interval: 86400

        google:
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt"
          path: ./ruleset/google.yaml
          interval: 86400

        proxy: # 代理域名列表
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
          path: ./ruleset/proxy.yaml
          interval: 86400

        private: # 私有网络专用域名列表
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt"
          path: ./ruleset/private.yaml
          interval: 86400

        gfw: # GFWList 域名列表
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt"
          path: ./ruleset/gfw.yaml
          interval: 86400

        tld-not-cn: # 非中国大陆使用的顶级域名列表
          type: http
          behavior: domain
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt"
          path: ./ruleset/tld-not-cn.yaml
          interval: 86400

        telegramcidr: # Telegram 使用的 IP 地址列表
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt"
          path: ./ruleset/telegramcidr.yaml
          interval: 86400

        cncidr: # 中国大陆 IP 地址列表
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt"
          path: ./ruleset/cncidr.yaml
          interval: 86400

        lancidr: # 局域网 IP 及保留 IP 地址列表
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt"
          path: ./ruleset/lancidr.yaml
          interval: 86400

        applications: # 需要直连的常见软件列表
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt"
          path: ./ruleset/applications.yaml
          interval: 86400

        mdavid_proxy: # 单独补充的
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/HEUDavid/svr/main/v2ray/clash/proxy.yaml"
          path: ./ruleset/mdavid_proxy.yaml
          interval: 864000

        mdavid_direct:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/HEUDavid/svr/main/v2ray/clash/direct.yaml"
          path: ./ruleset/mdavid_direct.yaml
          interval: 864000
