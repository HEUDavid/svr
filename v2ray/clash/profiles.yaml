parsers:
  - reg: ^.*$
    # 格式化配置文件
    code: |
      module.exports.parse = (raw, {yaml}) => {
        const config = yaml.parse(raw);
        const groupBaseOption = {
          "interval": 300,
          "timeout": 3000,
          "url": "https://www.google.com/generate_204",
          "lazy": true,
          "max-failed-times": 3,
          "hidden": false,
        };
        const sub = {
          "name": "SUB",
          "type": "url-test",
          "tolerance": 50,
          ...groupBaseOption,
        }
        const proxyCount = config?.proxies?.length ?? 0;
        if (proxyCount > 0) {
          sub.proxies = config.proxies
            .map((proxy) => proxy.name)
            .filter((name) => !name.includes("mDavid"));
        }
        const proxyProviderCount =
          typeof config?.["proxy-providers"] === "object" ? Object.keys(config["proxy-providers"]).length : 0;
        if (proxyProviderCount > 0) {
          sub.use = Object.keys(config["proxy-providers"]);
        }
        config["proxy-groups"] = [
          {
            "name": "PROXY",
            "type": "select",
            "proxies": ["GOOD", "SUB"],
            ...groupBaseOption,
          },
          {
            "name": "MEDIA",
            "type": "select",
            "proxies": ["GOOD", "SUB"],
            ...groupBaseOption,
          },
          {
            "name": "GOOD",
            "type": "select",
            "proxies": ["mDavid_CN"],
            ...groupBaseOption,
          },
          sub,
          {
            "name": "FINAL",
            "type": "select",
            "proxies": ["GOOD", "SUB", "DIRECT"],
            ...groupBaseOption,
          }
        ];
        const newConf = {
          'proxies': config['proxies'],
          'proxy-providers': config['proxy-providers'],
          'proxy-groups': config['proxy-groups'],
        };
        return yaml.stringify(newConf);
      }
    # 建立自己的配置
    yaml:
      prepend-proxies:
        - name: mDavid_CN
          type: vmess
          server: your_ip
          port: 10086
          uuid: abc
          alterId: 0
          cipher: none
          udp: true

      mix-rule-providers:
        globalmedia:
          type: http
          format: yaml
          interval: 86400
          behavior: classical
          url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml
          path: ./ruleset/blackmatrix7/globalmedia.yaml
        mdavid_proxy:
          type: http
          format: yaml
          interval: 86400
          behavior: classical
          url: https://raw.githubusercontent.com/HEUDavid/svr/main/v2ray/clash/proxy.yaml
          path: ./ruleset/mdavid/proxy.yaml
        mdavid_direct:
          type: http
          format: yaml
          interval: 86400
          behavior: classical
          url: https://raw.githubusercontent.com/HEUDavid/svr/main/v2ray/clash/direct.yaml
          path: ./ruleset/mdavid/direct.yaml
        douyin:
          type: http
          format: yaml
          interval: 86400
          behavior: classical
          url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/DouYin/DouYin.yaml
          path: ./ruleset/blackmatrix7/douyin.yaml
        applications:
          type: http
          format: yaml
          interval: 86400
          behavior: classical
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt
          path: ./ruleset/loyalsoldier/applications.yaml
        google:
          type: http
          format: yaml
          interval: 86400
          behavior: domain
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt
          path: ./ruleset/loyalsoldier/google.yaml
        openai:
          type: http
          format: yaml
          interval: 86400
          behavior: domain
          url: https://raw.githubusercontent.com/LM-Firefly/Rules/master/Clash-RuleSet-Classical/PROXY/OpenAi.yaml
          path: ./ruleset/lmfirefly/openai.yaml
        tld-not-cn:
          type: http
          format: yaml
          interval: 86400
          behavior: domain
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt
          path: ./ruleset/loyalsoldier/tld-not-cn.yaml
        proxy:
          type: http
          format: yaml
          interval: 86400
          behavior: domain
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt
          path: ./ruleset/loyalsoldier/proxy.yaml
        gfw:
          type: http
          format: yaml
          interval: 86400
          behavior: domain
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt
          path: ./ruleset/loyalsoldier/gfw.yaml
        private:
          type: http
          format: yaml
          interval: 86400
          behavior: domain
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt
          path: ./ruleset/loyalsoldier/private.yaml
        lancidr:
          type: http
          format: yaml
          interval: 86400
          behavior: ipcidr
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt
          path: ./ruleset/loyalsoldier/lancidr.yaml
        cncidr:
          type: http
          format: yaml
          interval: 86400
          behavior: ipcidr
          url: https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt
          path: ./ruleset/loyalsoldier/cncidr.yaml

      prepend-rules:
        - RULE-SET,globalmedia,MEDIA
        - RULE-SET,mdavid_proxy,PROXY
        - RULE-SET,mdavid_direct,DIRECT
        - RULE-SET,douyin,DIRECT
        - RULE-SET,applications,DIRECT
        - RULE-SET,google,PROXY
        - RULE-SET,openai,PROXY
        - RULE-SET,tld-not-cn,PROXY
        - RULE-SET,proxy,PROXY
        - RULE-SET,gfw,PROXY
        - RULE-SET,private,DIRECT
        - RULE-SET,lancidr,DIRECT,no-resolve
        - GEOIP,LAN,DIRECT,no-resolve
        - RULE-SET,cncidr,DIRECT,no-resolve
        - GEOIP,CN,DIRECT,no-resolve
        - MATCH,FINAL
